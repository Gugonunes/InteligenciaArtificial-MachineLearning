# -*- coding: utf-8 -*-
"""Processamento de linguagem natural.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OrFjRSGtbwupSExSiwcxd8QYi-33cOEl
"""

import bs4 as bs
import urllib.request
import nltk
import spacy

!python3 -m spacy download pt

pln = spacy.load('pt_core_news_sm')
pln

documento = pln('Estou aprendendo processamento de linguagem natural, curso em Curitiba')

for token in documento:
  print(token.text, token.pos_)

for token in documento:
  print(token.text, token.lemma_)

doc = pln('encontrei encontraram encontrar√£o encontrariam cursando curso cursei')

for token in doc:
  print(token.text, token.lemma_)

import nltk
nltk.download('rslp')

stemmer = nltk.stem.RSLPStemmer()
stemmer.stem('aprender')

for token in documento:
  print(token.text, token.lemma_, stemmer.stem(token.text))

dados = urllib.request.urlopen('https://pt.wikipedia.org/wiki/Intelig%C3%AAncia_artificial')

dados = dados.read()
dados

dados_html = bs.BeautifulSoup(dados, 'lxml')
dados_html

paragrafos = dados_html.find_all('p')

len(paragrafos)

paragrafos[0]

paragrafos[0].text

conteudo = ''
for p in paragrafos:
  conteudo+=p.text
conteudo

conteudo = conteudo.lower()
conteudo

pln = spacy.load('pt_core_news_sm')
pln

string = 'turing'
token_pesquisa = pln(string)

from spacy.matcher import PhraseMatcher
matcher = PhraseMatcher(pln.vocab)
matcher.add('SEARCH', None, token_pesquisa)

doc = pln(conteudo)
matches = matcher(doc)
matches

doc[3351:3352]

matches[0]

from IPython.core.display import HTML
texto = ''
numero_palavras = 50
doc = pln(conteudo)
matches = matcher(doc)

display(HTML(f'<h1>{string.upper()}</h1>'))
display(HTML(f"""<p><strong>Resultados encontrados: </strong> {len(matches)}</p>"""))
for i in matches:
  inicio = i[1] - numero_palavras
  if inicio < 0:
    inicio = 0
  texto += str(doc[inicio:i[2] + numero_palavras]).replace(string, f"<mark> {string} </mark>")
  texto += "<br/><br/>"
display(HTML(f"""... { texto } ..."""))

for entidade in doc.ents:
  print(entidade.text, entidade.label_)

from spacy import displacy
displacy.render(doc, style = 'ent', jupyter = True)



